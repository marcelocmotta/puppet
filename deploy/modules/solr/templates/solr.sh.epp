<%-| 
  String           $solr_bin,
  String           $solr_user,
  Optional[String] $solr_env = undef,
|-%>
#!/bin/sh
####################################################################
#### NOTE: THIS FILE IS PUPPET CONTROLLED - ANY CHAGES WILL BE LOST
####################################################################
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

### BEGIN INIT INFO
# Provides:          solr
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Description:       Controls Apache Solr as a Service
### END INIT INFO

# Example of a very simple *nix init script that delegates commands to the bin/solr script
# Typical usage is to do:
#
#   cp bin/init.d/solr /etc/init.d/solr
#   chmod 755 /etc/init.d/solr
#   chown root:root /etc/init.d/solr
#   update-rc.d solr defaults
#   update-rc.d solr enable

SOLR_BIN_DIR=<%= $solr_bin %>

if [ ! -d "$SOLR_BIN_DIR" ]; then
  echo "$SOLR_BIN_DIR not found! Please check the SOLR_BIN_DIR setting in your $0 script."
  exit 1
fi

SOLR_ENV=<%= $solr_env %>

if [ ! -f "$SOLR_ENV" ]; then
  echo "$SOLR_ENV not found! Please check the SOLR_ENV setting in your $0 script."
  exit 1
fi

# Specify the user to run Solr as; if not set, then Solr will run as root.
# Running Solr as root is not recommended for production environments
RUNAS=<%= $solr_user %>

# verify the specified run as user exists
runas_uid=`id -u $RUNAS`
if [ $? -ne 0 ]; then
  echo "User $RUNAS not found! Please create the $RUNAS user before running this script."
  exit 1
fi

start () {
    echo -n "Starting solr..."
    su -c "SOLR_INCLUDE=$SOLR_ENV $SOLR_BIN_DIR/solr start" - $RUNAS

    RETVAL=$?
    if [ $RETVAL = 0 ]
    then
        echo "done."
    else
        echo "failed. See error code for more information."
    fi
    return $RETVAL
}

stop () {
    echo -n "Stopping solr..."

    su -c "SOLR_INCLUDE=$SOLR_ENV $SOLR_BIN_DIR/solr stop" - $RUNAS
    RETVAL=$?

    if [ $RETVAL = 0 ]
    then
        echo "Done."
    else
        echo "Failed. See error code for more information."
    fi
    return $RETVAL
}

restart () {

    echo -n "Restart solr..."
    su -c "SOLR_INCLUDE=$SOLR_ENV $SOLR_BIN_DIR/solr restart" - $RUNAS
    RETVAL=$?

    if [ $RETVAL = 0 ]
        then
            echo "Done."
        else
            echo "Failed. See error code for more information."
        fi
        return $RETVAL
}

status () {
    su -c "SOLR_INCLUDE=$SOLR_ENV $SOLR_BIN_DIR/solr status" - $RUNAS
    RETVAL=$?

    if [ $RETVAL = 0 ]
        then
            echo "Done."
        else
            echo "Failed. See error code for more information."
        fi
        return $RETVAL
}

case "$1" in
    start)
        start
    ;;
    status)
        status
    ;;
    stop)
        stop
    ;;
    restart)
        restart
    ;;
    *)
        echo $"Usage: solr {start|status|stop|restart}"
        exit 3
    ;;
esac

exit $RETVAL
